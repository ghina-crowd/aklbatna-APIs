// Generated by CoffeeScript 1.12.7
(function() {
<<<<<<< HEAD
  var XMLDTDElement, XMLNode,
=======
  var NodeType, XMLDTDElement, XMLNode,
>>>>>>> ecdadc3a00ac68972434f72ecc31ecf2dcdc9700
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  XMLNode = require('./XMLNode');

<<<<<<< HEAD
=======
  NodeType = require('./NodeType');

>>>>>>> ecdadc3a00ac68972434f72ecc31ecf2dcdc9700
  module.exports = XMLDTDElement = (function(superClass) {
    extend(XMLDTDElement, superClass);

    function XMLDTDElement(parent, name, value) {
      XMLDTDElement.__super__.constructor.call(this, parent);
      if (name == null) {
<<<<<<< HEAD
        throw new Error("Missing DTD element name");
=======
        throw new Error("Missing DTD element name. " + this.debugInfo());
>>>>>>> ecdadc3a00ac68972434f72ecc31ecf2dcdc9700
      }
      if (!value) {
        value = '(#PCDATA)';
      }
      if (Array.isArray(value)) {
        value = '(' + value.join(',') + ')';
      }
<<<<<<< HEAD
      this.name = this.stringify.eleName(name);
=======
      this.name = this.stringify.name(name);
      this.type = NodeType.ElementDeclaration;
>>>>>>> ecdadc3a00ac68972434f72ecc31ecf2dcdc9700
      this.value = this.stringify.dtdElementValue(value);
    }

    XMLDTDElement.prototype.toString = function(options) {
<<<<<<< HEAD
      return this.options.writer.set(options).dtdElement(this);
=======
      return this.options.writer.dtdElement(this, this.options.writer.filterOptions(options));
>>>>>>> ecdadc3a00ac68972434f72ecc31ecf2dcdc9700
    };

    return XMLDTDElement;

  })(XMLNode);

}).call(this);
